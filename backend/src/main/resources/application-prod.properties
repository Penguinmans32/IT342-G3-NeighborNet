spring.application.name=NeighborNet-Backend

# Database Config will be set via environment variables
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate Config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.devtools.restart.enabled=false

logging.level.org.springframework=INFO

spring.datasource.hikari.auto-commit=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false

# Hikari Config
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.pool-name=NeighborNetHikariPool

# JWT Config
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}
jwt.refresh.expiration=${JWT_REFRESH_EXPIRATION}

#JPA Transaction Configuration
spring.jpa.properties.hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform
spring.transaction.default-timeout=30
spring.jpa.open-in-view=false

# Frontend URL - Update with your deployed frontend URL
app.frontend.url=https://it-342-g3-neighbor-net.vercel.app
app.auth.redirectUri=https://it342-g3-neighbornet.onrender.com
app.oauth2.authorized-redirect-uris=https://it-342-g3-neighbor-net.vercel.app/oauth2/redirect

# Swagger UI custom path
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.doc-expansion=none

#File Upload properties
file.upload-dir=./uploads
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB
spring.servlet.multipart.enabled=true

app.item-images.path=item-images

video.upload-dir=videos
video.base-url=/api/classes/lessons/video

server.port=8080
server.address=0.0.0.0

spring.websocket.allowed-origins=https://it-342-g3-neighbor-net.vercel.app,https://it342-g3-neighbornet.onrender.com

server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never

spring.webmvc.cors.allowed-origins=https://it-342-g3-neighbor-net.vercel.app
spring.webmvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.webmvc.cors.allowed-headers=*
spring.webmvc.cors.allow-credentials=true
spring.webmvc.cors.max-age=3600

# Performance settings
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.query.plan_cache_max_size=4096
spring.jpa.properties.hibernate.default_batch_fetch_size=25

gcp.storage.bucket-name=neighbornet-media
gcp.storage.credentials.path=${GCS_CREDENTIALS_PATH:classpath:gcp-credentials.json}
gcp.storage.public-url=https://storage.googleapis.com

spring.cache.caffeine.spec=expireAfterWrite=5s

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=https://it342-g3-neighbornet.onrender.com/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile

spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.redirect-uri=https://it342-g3-neighbornet.onrender.com/login/oauth2/code/github
spring.security.oauth2.client.registration.github.scope=user:email,read:user

spring.security.oauth2.client.registration.microsoft.client-id=${MICROSOFT_CLIENT_ID}
spring.security.oauth2.client.registration.microsoft.client-secret=${MICROSOFT_CLIENT_SECRET}
spring.security.oauth2.client.registration.microsoft.scope=openid,profile,email,User.Read
spring.security.oauth2.client.registration.microsoft.client-name=Microsoft
spring.security.oauth2.client.registration.microsoft.redirect-uri=https://it342-g3-neighbornet.onrender.com/login/oauth2/code/microsoft
spring.security.oauth2.client.registration.microsoft.authorization-grant-type=authorization_code

spring.security.oauth2.client.registration.microsoft.provider=microsoft

# Microsoft Provider Endpoints
spring.security.oauth2.client.provider.microsoft.authorization-uri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.microsoft.token-uri=https://login.microsoftonline.com/common/oauth2/v2.0/token
spring.security.oauth2.client.provider.microsoft.user-info-uri=https://graph.microsoft.com/oidc/userinfo
spring.security.oauth2.client.provider.microsoft.user-name-attribute=email
spring.security.oauth2.client.provider.microsoft.jwk-set-uri=https://login.microsoftonline.com/common/discovery/v2.0/keys