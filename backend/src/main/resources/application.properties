spring.application.name=NeighborNet-Backend

# Database Config
spring.datasource.url=jdbc:${MYSQL_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate Config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.devtools.restart.enabled=false

logging.level.org.springframework.boot.devtools=OFF
logging.level.org.springframework=INFO

spring.datasource.hikari.auto-commit=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false

# Hikari Config
logging.level.com.zaxxer.hikari.HikariConfig=OFF
logging.level.com.zaxxer.hikari=OFF

# JWT Config
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}
jwt.refresh.expiration=${JWT_REFRESH_EXPIRATION}

#JPA Transaction Configuration
spring.jpa.properties.hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform
spring.transaction.default-timeout=30
spring.jpa.open-in-view=false

#Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.from=${spring.mail.username}
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.debug=true

spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2
spring.mail.properties.mail.smtp.auth.mechanisms=PLAIN
spring.mail.properties.mail.smtp.auth.plain.disable=false

# Frontend URL
app.frontend.url=https://it-342-g3-neighbor-net.vercel.app/
app.auth.redirectUri=https://neighbornet-back-production.up.railway.app
app.oauth2.authorized-redirect-uris=https://it-342-g3-neighbor-net.vercel.app/oauth2/redirect

# Swagger UI custom path
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.doc-expansion=none

# Google Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=https://neighbornet-back-production.up.railway.app/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile

# Github Configuration
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.redirect-uri=https://neighbornet-back-production.up.railway.app/login/oauth2/code/github
spring.security.oauth2.client.registration.github.scope=user:email,read:user

# Microsoft OAuth2 Configuration
spring.security.oauth2.client.registration.microsoft.client-id=${MICROSOFT_CLIENT_ID}
spring.security.oauth2.client.registration.microsoft.client-secret=${MICROSOFT_CLIENT_SECRET}
spring.security.oauth2.client.registration.microsoft.scope=openid,profile,email,User.Read
spring.security.oauth2.client.registration.microsoft.client-name=Microsoft
spring.security.oauth2.client.registration.microsoft.redirect-uri=https://neighbornet-back-production.up.railway.app/login/oauth2/code/microsoft
spring.security.oauth2.client.registration.microsoft.authorization-grant-type=authorization_code

spring.security.oauth2.client.registration.microsoft.provider=microsoft

# Microsoft Provider Endpoints
spring.security.oauth2.client.provider.microsoft.authorization-uri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.microsoft.token-uri=https://login.microsoftonline.com/common/oauth2/v2.0/token
spring.security.oauth2.client.provider.microsoft.user-info-uri=https://graph.microsoft.com/oidc/userinfo
spring.security.oauth2.client.provider.microsoft.user-name-attribute=email
spring.security.oauth2.client.provider.microsoft.jwk-set-uri=https://login.microsoftonline.com/common/discovery/v2.0/keys

server.servlet.session.cookie.same-site=none
server.servlet.session.cookie.secure=true

# Logging configuration
logging.level.com.example.neighbornetbackend=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#File Upload properties
file.upload-dir=./uploads
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB

app.item-images.path=item-images

video.upload-dir=videos
video.base-url=/api/classes/lessons/video

app.mobile.scheme=neighbornet

server.port=8080
server.address=0.0.0.0

app.mobile.header=X-Mobile-Request

logging.level.root=INFO
logging.level.org.springframework.messaging=ERROR
logging.level.org.springframework.web.socket=ERROR
logging.level.com.example.yourapp=DEBUG

spring.websocket.enabled=true
spring.websocket.allowed-origins=http://localhost:5173,http://10.0.2.2:8080,http://10.0.191.212:8080
spring.websocket.max-text-message-size=8192
spring.websocket.max-binary-message-size=8192

server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
spring.jackson.time-zone=UTC

spring.webmvc.cors.allowed-origins=https://it-342-g3-neighbor-net.vercel.app,http://10.0.2.2:8080,http://10.0.191.212:8080
spring.webmvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.webmvc.cors.allowed-headers=*
spring.webmvc.cors.allow-credentials=true
spring.webmvc.cors.max-age=3600

firebase.credentials.path=firebase-service-account.json

# HMS Configuration
hms.access.key=${HMS_ACCESS_KEY}
hms.access.secret=${HMS_APP_SECRET}
hms.template.id=${HMS_TEMPLATE_ID}

# Gemini API Configuration
gemini.api.key=${GEMINI_API_KEY}
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=true
spring.jpa.properties.hibernate.query.plan_cache_max_size=4096
spring.jpa.properties.hibernate.default_batch_fetch_size=25

